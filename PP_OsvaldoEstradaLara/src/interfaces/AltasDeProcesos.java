/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import cjb.ci.CtrlInterfaz;
import cjb.ci.Mensajes;
import cjb.ci.Validaciones;
import edd.LDLC;
import edd.Manipulacion;
import edd.Prioridad;
import edd.Proceso;
import poo.Archivos;
import sun.security.provider.VerificationProvider;

/**
 *
 * @author osval
 */
public class AltasDeProcesos extends javax.swing.JFrame
{

    /**
     * Creates new form AltasDeProcesos
     */
    public AltasDeProcesos()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panel = new javax.swing.JPanel();
        botonRegresar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        numeroDePrioridad = new javax.swing.JLabel();
        textoNoPrioridad = new javax.swing.JTextField();
        nombre = new javax.swing.JLabel();
        textoNombre = new javax.swing.JTextField();
        quantums = new javax.swing.JLabel();
        textoQuantums = new javax.swing.JTextField();
        botonAceptar = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        altaProcesos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel.setBackground(new java.awt.Color(48, 146, 255));
        panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        botonRegresar.setBackground(new java.awt.Color(255, 255, 0));
        botonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regreso.png"))); // NOI18N
        botonRegresar.setToolTipText("Menú Principal");
        botonRegresar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        botonRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegresar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botonRegresarActionPerformed(evt);
            }
        });

        botonSalir.setBackground(new java.awt.Color(255, 0, 0));
        botonSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/SímboloCerrar.png"))); // NOI18N
        botonSalir.setToolTipText("Cerrar programa");
        botonSalir.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        botonSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonSalir.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botonSalirActionPerformed(evt);
            }
        });

        numeroDePrioridad.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        numeroDePrioridad.setText("Número de Prioridad:");

        textoNoPrioridad.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        textoNoPrioridad.setToolTipText("Insertar la prioridad del proceso");
        textoNoPrioridad.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textoNoPrioridad.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                textoNoPrioridadActionPerformed(evt);
            }
        });
        textoNoPrioridad.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                textoNoPrioridadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                textoNoPrioridadKeyTyped(evt);
            }
        });

        nombre.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        nombre.setText("Nombre:");

        textoNombre.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        textoNombre.setToolTipText("Insertar el nombre del proceso");
        textoNombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textoNombre.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                textoNombreActionPerformed(evt);
            }
        });
        textoNombre.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                textoNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                textoNombreKeyTyped(evt);
            }
        });

        quantums.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        quantums.setText("Quantums:");

        textoQuantums.setFont(new java.awt.Font("Segoe UI", 0, 22)); // NOI18N
        textoQuantums.setToolTipText("Insertar los quantums del proceso");
        textoQuantums.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        textoQuantums.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                textoQuantumsActionPerformed(evt);
            }
        });
        textoQuantums.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                textoQuantumsKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                textoQuantumsKeyTyped(evt);
            }
        });

        botonAceptar.setBackground(new java.awt.Color(102, 255, 102));
        botonAceptar.setText("Aceptar");
        botonAceptar.setToolTipText("Guardar proceso");
        botonAceptar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        botonAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAceptar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botonAceptarActionPerformed(evt);
            }
        });
        botonAceptar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                botonAceptarKeyPressed(evt);
            }
        });

        botonBorrar.setBackground(new java.awt.Color(255, 255, 0));
        botonBorrar.setText("Limpiar");
        botonBorrar.setToolTipText("Limpia los campos");
        botonBorrar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        botonBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonBorrar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                botonBorrarActionPerformed(evt);
            }
        });

        altaProcesos.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        altaProcesos.setText("Alta de procesos");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nombre)
                            .addComponent(numeroDePrioridad)
                            .addComponent(quantums)
                            .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textoQuantums, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textoNoPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(altaProcesos)
                        .addGap(67, 67, 67)
                        .addComponent(botonRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(altaProcesos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(numeroDePrioridad)
                                .addGap(40, 40, 40)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nombre)))
                            .addComponent(textoNoPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addComponent(textoQuantums, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(quantums)))
                .addGap(50, 50, 50)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botonRegresarActionPerformed
    {//GEN-HEADEREND:event_botonRegresarActionPerformed
        Archivos.guarda(this, MenuPrincipal.lista, "Datos.dat");
        new MenuPrincipal().setVisible(true);
        dispose();
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botonSalirActionPerformed
    {//GEN-HEADEREND:event_botonSalirActionPerformed
        Archivos.guarda(this, MenuPrincipal.lista, "Datos.dat");
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void textoNoPrioridadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_textoNoPrioridadActionPerformed
    {//GEN-HEADEREND:event_textoNoPrioridadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNoPrioridadActionPerformed

    private void textoNombreActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_textoNombreActionPerformed
    {//GEN-HEADEREND:event_textoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNombreActionPerformed

    private void textoQuantumsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_textoQuantumsActionPerformed
    {//GEN-HEADEREND:event_textoQuantumsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoQuantumsActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botonAceptarActionPerformed
    {//GEN-HEADEREND:event_botonAceptarActionPerformed
        try
        {
            int noPrioridad = Integer.valueOf(textoNoPrioridad.getText());
            String nom = textoNombre.getText();
            int quantums = Integer.valueOf(textoQuantums.getText());

            if (noPrioridad == 0 || quantums == 0)
            {
                Mensajes.error(this, "Error... Revise los campos de nuevo.");
                CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
                CtrlInterfaz.cambia(textoNoPrioridad);
            } else
            {
                if (MenuPrincipal.lista == null)
                {
                    LDLC lista2 = new LDLC();
                    MenuPrincipal.lista = lista2;
                }
                if (Manipulacion.verificaNombreProceso(MenuPrincipal.lista, nom) == true)
                {
                    Mensajes.error(this, "El nombre del proceso ya existe.");
                    CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
                    CtrlInterfaz.cambia(textoNoPrioridad);
                } else
                {
                    Proceso proceso = new Proceso(noPrioridad, quantums, nom);
                    MenuPrincipal.lista = Manipulacion.altaProceso(proceso, MenuPrincipal.lista);
                    Archivos.guarda(this, MenuPrincipal.lista, "Datos.dat");
                    Mensajes.exito(this, "Proceso ingresado con éxito.");
                    CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
                    CtrlInterfaz.cambia(textoNoPrioridad);
                }
            }
        } catch (Exception e)
        {
            Mensajes.error(this, "Error..."+ e.getMessage());
        }

    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_botonBorrarActionPerformed
    {//GEN-HEADEREND:event_botonBorrarActionPerformed
        CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
        CtrlInterfaz.cambia(textoNoPrioridad);
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosed
    {//GEN-HEADEREND:event_formWindowClosed
        Archivos.guarda(this, MenuPrincipal.lista, "Datos.dat");
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void textoNoPrioridadKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textoNoPrioridadKeyTyped
    {//GEN-HEADEREND:event_textoNoPrioridadKeyTyped
        Validaciones.validaEntero(evt, 2, textoNoPrioridad.getText());
    }//GEN-LAST:event_textoNoPrioridadKeyTyped

    private void textoNombreKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textoNombreKeyTyped
    {//GEN-HEADEREND:event_textoNombreKeyTyped
        Validaciones.validaAlfabeticos(evt, 15, textoNombre.getText());
    }//GEN-LAST:event_textoNombreKeyTyped

    private void textoQuantumsKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textoQuantumsKeyTyped
    {//GEN-HEADEREND:event_textoQuantumsKeyTyped
        Validaciones.validaEntero(evt, 2, textoQuantums.getText());
    }//GEN-LAST:event_textoQuantumsKeyTyped

    private void textoNoPrioridadKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textoNoPrioridadKeyPressed
    {//GEN-HEADEREND:event_textoNoPrioridadKeyPressed
        Validaciones.enterCadenaNoVacia(this, evt, textoNoPrioridad, textoNombre);
    }//GEN-LAST:event_textoNoPrioridadKeyPressed

    private void textoNombreKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textoNombreKeyPressed
    {//GEN-HEADEREND:event_textoNombreKeyPressed
        Validaciones.enterCadenaNoVacia(this, evt, textoNombre, textoQuantums);
    }//GEN-LAST:event_textoNombreKeyPressed

    private void textoQuantumsKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textoQuantumsKeyPressed
    {//GEN-HEADEREND:event_textoQuantumsKeyPressed
        Validaciones.enterCadenaNoVacia(this, evt, textoQuantums, botonAceptar);
    }//GEN-LAST:event_textoQuantumsKeyPressed

    private void botonAceptarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_botonAceptarKeyPressed
    {//GEN-HEADEREND:event_botonAceptarKeyPressed
        try
        {
            int noPrioridad = Integer.parseInt(textoNoPrioridad.getText());
            String nom = textoNombre.getText();
            int quantums = Integer.parseInt(textoQuantums.getText());

            if (noPrioridad == 0 || quantums == 0)
            {
                Mensajes.error(this, "Error... Revise los campos de nuevo.");
                CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
                CtrlInterfaz.cambia(textoNoPrioridad);
            } else
            {
                if (MenuPrincipal.lista == null)
                {
                    LDLC lista2 = new LDLC();
                    MenuPrincipal.lista = lista2;
                }
                if (Manipulacion.verificaNombreProceso(MenuPrincipal.lista, nom) == true)
                {
                    Mensajes.error(this, "El nombre del proceso ya existe.");
                    CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
                    CtrlInterfaz.cambia(textoNoPrioridad);
                } else
                {
                    Proceso proceso = new Proceso(noPrioridad, quantums, nom);
                    MenuPrincipal.lista = Manipulacion.altaProceso(proceso, MenuPrincipal.lista);
                    Archivos.guarda(this, MenuPrincipal.lista, "Datos.dat");
                    Mensajes.exito(this, "Proceso ingresado con éxito.");
                    CtrlInterfaz.limpia(textoNoPrioridad, textoNombre, textoQuantums);
                    CtrlInterfaz.cambia(textoNoPrioridad);
                }
            }
        } catch (Exception e)
        {
            Mensajes.error(this, "Error..."+ e.getMessage());
        }
    }//GEN-LAST:event_botonAceptarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(AltasDeProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(AltasDeProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(AltasDeProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(AltasDeProcesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new AltasDeProcesos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel altaProcesos;
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JLabel nombre;
    private javax.swing.JLabel numeroDePrioridad;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel quantums;
    private javax.swing.JTextField textoNoPrioridad;
    private javax.swing.JTextField textoNombre;
    private javax.swing.JTextField textoQuantums;
    // End of variables declaration//GEN-END:variables
}
